tapable使用：
const {
  SyncHook, // webpack
  SyncBailHook, // webpack
  SyncWaterfallHook,
  SyncLoopHook,
  AsyncParallelHook, // webpack
  AsyncParallelBailHook,
  AsyncSeriesHook, // webpack
  AsyncSeriesBailHook,
  AsyncSeriesWaterfallHook
}


class MyTapable {
  constructor (context) {
    this.hook = {
      hook1: new SyncHook(['name']),
      hook2: new SyncBailHook([]),
      hook3: new AsyncParallelHook(['name1', 'name2', 'name3']),
      hook4: new AsyncSeriesHook(['name1', 'name2'])
    }
  }

  registerHook1 (eventName) {
    this.hook.hook1.tap(eventName, (name) => {
      console.log(eventName, name);
    })
  }

  envoke1 () {
    this.hook.hook1.call('SYNCHOOK')
  }
}



tapable钩子说明：
SyncHook：
